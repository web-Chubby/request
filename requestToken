import axios from 'axios';
import router from '../router'

const service = axios.create({
    // process.env.NODE_ENV === 'development', //来判断是否开发环境
    // easy-mock服务挂了，暂时不使用了
    // baseURL: 'https://www.easy-mock.com/mock/592501a391470c0ac1fab128',
    timeout: 5000
});

let userTOken = localStorage.getItem('token')
service.interceptors.request.use(
    config => {
        if (userTOken) {
            config.headers['Authorization'] = userTOken;
        }
        return config;
    },
    error => {
        //console.log(error);
        return Promise.reject();
    }
);

service.interceptors.response.use(
    response => {
        if (response.status === 200) {
			//处理token过期 状态码和后端商量
            if (response.data.code === 9001) {
                router.replace({
                    path: '/login' // 到登录页重新获取token
                })
            }
            return response.data;
        } else {
            Promise.reject();
        }

        return response
    },
    error => {
        //console.log(error);
        return Promise.reject();
    }
);


export default service;
